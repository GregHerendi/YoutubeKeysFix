// ==UserScript==
// @name         Youtube player control keys FIX
// @namespace    https://github.com/GregHerendi
// @version      1.0.1
// @description  Fix player controls Space, Left, Right, Up, Down to behave consistently after page load or clicking individual controls. Not focusing the mute button anymore.
// @author       Greg Herendi
// @license      MIT
// @match        *://www.youtube.com/watch*
// @match        *://youtube.com/watch*
// @grant        none
// @require      http://code.jquery.com/jquery-latest.js
// ==/UserScript==
/*
Youtube player controls will work consistently after page load and after clicking controls:
- Space (play/pause), F (fullscreen), M (mute), Left (jump backwards), Right (jump forwards), Up (volume up), Down (volume down)

Click outside movie frame to get standard page controls: Space (page down), Up, Down, Left, Right (scroll)

Fixes the following awkward behaviour of Youtube player controls after clicking them (making the individual control focused):
- after clicking the mute button Space toggles mute instead of pausing
- after clicking the volume slider Left-Right will change the volume instead of stepping the video.
- after clicking subtitle button Space will toggle subtitles
- after clicking settings button Space will toggle settings
*/
/*
Changelog:
1.1: support classic html5 player (#movie_player element is constructed later than userscript loaded)
     @match *://
1.0: support material design (polymer) html5 player
*/

// Debug log
//console.log("Youtube fix: loaded");
//var lastFocused;

$(document).ready(function() {
//document.addEventListener("DOMContentLoaded", function() {
    'use strict';
    
    function onFocus(event) {
        // Called when a sub-element of the player gets focus (by clicking or TAB). 
        var playerElem= document.getElementById('movie_player');
        //var playerElem= document.getElementById('player-api');

        // Debug feedback on last focused element
        //console.log("Youtube fix: " + event.type + " ->", event.target, event);
        //if (lastFocused)   lastFocused.style.background= null;  lastFocused= event.target !== playerElem  && event.target;  if (lastFocused)  lastFocused.style.background= 'lightblue';
        
        // Avoid infinite recursion of playerElem.focus() -> onFocus()
        if  (event.target === playerElem)  return;
        // todo: return if focused by TAB key
        
        // Focus the player to have proper keyboard controls
        playerElem.focus();
    }

    // '#player-api' is in the html source available when loading userscript,
    // while '#movie_player' is generated by javascript, happened once that it was not available when $(document).ready() was called
    // the movie player keypress handler is registered on '#movie_player', therefore that element has to be focused
    var playerElem= document.getElementById('movie_player');
    if (playerElem) {
        // Movie player frame (element) is focused when loading the page to get movie player keyboard controls.
        playerElem.focus();
        /* Bubble up 'focus' event from siblings:  'focusin' event (bubbling version of 'focus') supported only since:
         Firefox 52 (March 7, 2017),
        Chrome is reported to have document.onfocusin === undefined,
         while supporting both 'focusin' and 'focus' with useCapture, so any method will work
        I'm not sure if  'focus' with useCapture= true  is supported in all current and older browsers if 'focusin' is supported,
         therefore this compatibility code:
        */
        //var supported= 'onfocusin' in document ? 'in' : '';
        //console.log("Youtube fix: supported='" + supported + "'");
        // Neither of these works in Vivaldi (chromium based) browser
        //playerElem.addEventListener('focus' + supported, onFocus, !supported);
        //playerElem.addEventListener('focus', onFocus, true);
        //playerElem.addEventListener('focusin', onFocus);
    } else {
        console.log("Youtube fix failed to focus  #movie_player  element:  not generated yet");
    }
    // Requires jquery for .on('focusin', ...).  addEventListener('focusin', ...), addEventListener('focus', ..., true) failed to work in chromium-based Vivaldi
    //$('#player-api > *').on('focusin', onFocus);
    $('#movie_player > *').on('focusin', onFocus);
    // '.ytp-chrome-bottom' has all the controls that should delegate focus to the player instead of getting focused themselves
    //$('#movie_player .ytp-chrome-bottom').on('focusin', onFocus);
    // If there are other controls outside '.ytp-chrome-bottom', use the following instead:
    //$('#movie_player').on('focusin', onFocus);
});

